// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ResetPasswordFormContainer renders 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ResetPasswordFormContainer
    id="abc"
    onCancel={[MockFunction]}
    onSubmit={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "email": "",
      "errorMessage": null,
      "id": "abc",
      "isDisabled": false,
      "onCancel": [MockFunction],
      "onEmailChange": [Function],
      "onSubmit": [Function],
      "onUsernameChange": [Function],
      "showSuccessMessage": false,
      "username": "",
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "email": "",
        "errorMessage": null,
        "id": "abc",
        "isDisabled": false,
        "onCancel": [MockFunction],
        "onEmailChange": [Function],
        "onSubmit": [Function],
        "onUsernameChange": [Function],
        "showSuccessMessage": false,
        "username": "",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
