// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProductsContainer renders 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ProductsContainer
    getManufacturers={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    getProducts={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    manufacturers={
      Array [
        Object {
          "id": "abc",
          "logo": "abc.jpg",
          "name": "Krazy Kites",
          "website": "http://krazykites.com",
        },
      ]
    }
    products={
      Object {
        "abc": Array [
          Object {
            "colors": Array [
              Object {
                "color": "#ff0000",
                "name": "red",
              },
              Object {
                "color": "#000000",
                "name": "black",
              },
            ],
            "id": "abc",
            "manufacturer": "abc",
            "name": "Krazy Kite",
            "url": "http://krazykites.com/krazy-kite",
            "variations": Array [
              Object {
                "name": "Standard",
                "svg": "<div>Kool Kite</div>",
              },
            ],
          },
        ],
      }
    }
  >
    [Function]
  </ProductsContainer>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": "Test",
    },
    "ref": null,
    "rendered": "Test",
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "Test",
      },
      "ref": null,
      "rendered": "Test",
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
