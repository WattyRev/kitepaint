// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tooltip renders 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Tooltip
    fadeSpeedMs={250}
  >
    hello
  </Tooltip>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef
          icon="info"
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
        />,
        false,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "icon": "info",
          "onMouseEnter": [Function],
          "onMouseLeave": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": undefined,
          "componentStyle": ComponentStyle {
            "componentId": "sc-VigVT",
            "isStatic": false,
            "lastClassName": "icZKQN",
            "rules": Array [
              "
  border: 1px solid ",
              [Function],
              ";
  color: gray;
  border-radius: 50%;
  width: 12px !important;
  height: 12px;
  display: inline-block;
  padding: 1px;
  box-sizing: border-box;
  transform: translateY(-3px);
  cursor: help;
",
            ],
          },
          "displayName": "Styled(FontAwesomeIcon)",
          "render": [Function],
          "styledComponentId": "sc-VigVT",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        },
      },
      false,
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef
            icon="info"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          />,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "icon": "info",
            "onMouseEnter": [Function],
            "onMouseLeave": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": undefined,
            "componentStyle": ComponentStyle {
              "componentId": "sc-VigVT",
              "isStatic": false,
              "lastClassName": "icZKQN",
              "rules": Array [
                "
  border: 1px solid ",
                [Function],
                ";
  color: gray;
  border-radius: 50%;
  width: 12px !important;
  height: 12px;
  display: inline-block;
  padding: 1px;
  box-sizing: border-box;
  transform: translateY(-3px);
  cursor: help;
",
              ],
            },
            "displayName": "Styled(FontAwesomeIcon)",
            "render": [Function],
            "styledComponentId": "sc-VigVT",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
        false,
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
