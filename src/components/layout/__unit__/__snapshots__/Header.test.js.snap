// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header renders 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <div
          className="left"
        >
          <ForwardRef>
            <ForwardRef
              as={[Function]}
              to="/"
            >
              KitePaint
            </ForwardRef>
          </ForwardRef>
        </div>,
        <div
          className="right"
        >
          <ForwardRef
            as={[Function]}
            to="/"
          >
            <FontAwesomeIcon
              border={false}
              className=""
              fixedWidth={false}
              flip={null}
              icon="home"
              inverse={false}
              listItem={false}
              mask={null}
              pull={null}
              pulse={false}
              rotation={null}
              size={null}
              spin={false}
              symbol={false}
              title=""
              transform={null}
            />
          </ForwardRef>
          <ForwardRef
            as={[Function]}
            to="/about"
          >
            About
          </ForwardRef>
          <ForwardRef
            as={[Function]}
            to="/create"
          >
            Create
          </ForwardRef>
          <Connect(UserContainer)>
            [Function]
          </Connect(UserContainer)>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ForwardRef>
            <ForwardRef
              as={[Function]}
              to="/"
            >
              KitePaint
            </ForwardRef>
          </ForwardRef>,
          "className": "left",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ForwardRef
              as={[Function]}
              to="/"
            >
              KitePaint
            </ForwardRef>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": [Function],
              "children": "KitePaint",
              "to": "/",
            },
            "ref": null,
            "rendered": "KitePaint",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": undefined,
              "componentStyle": ComponentStyle {
                "componentId": "sc-bdVaJa",
                "isStatic": false,
                "rules": Array [
                  "
  color: ",
                  [Function],
                  ";
  text-decoration: none;
  margin: 0;
  cursor: pointer;

  &:hover {
    text-decoration: underline;
  }
",
                ],
              },
              "displayName": "styled.a",
              "render": [Function],
              "styledComponentId": "sc-bdVaJa",
              "target": "a",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": undefined,
            "componentStyle": ComponentStyle {
              "componentId": "sc-htoDjs",
              "isStatic": true,
              "rules": Array [
                "
  font-size: 1.5em;
",
              ],
            },
            "displayName": "Styled(H2)",
            "render": [Function],
            "styledComponentId": "sc-htoDjs",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <ForwardRef
              as={[Function]}
              to="/"
            >
              <FontAwesomeIcon
                border={false}
                className=""
                fixedWidth={false}
                flip={null}
                icon="home"
                inverse={false}
                listItem={false}
                mask={null}
                pull={null}
                pulse={false}
                rotation={null}
                size={null}
                spin={false}
                symbol={false}
                title=""
                transform={null}
              />
            </ForwardRef>,
            <ForwardRef
              as={[Function]}
              to="/about"
            >
              About
            </ForwardRef>,
            <ForwardRef
              as={[Function]}
              to="/create"
            >
              Create
            </ForwardRef>,
            <Connect(UserContainer)>
              [Function]
            </Connect(UserContainer)>,
          ],
          "className": "right",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": [Function],
              "children": <FontAwesomeIcon
                border={false}
                className=""
                fixedWidth={false}
                flip={null}
                icon="home"
                inverse={false}
                listItem={false}
                mask={null}
                pull={null}
                pulse={false}
                rotation={null}
                size={null}
                spin={false}
                symbol={false}
                title=""
                transform={null}
              />,
              "to": "/",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "border": false,
                "className": "",
                "fixedWidth": false,
                "flip": null,
                "icon": "home",
                "inverse": false,
                "listItem": false,
                "mask": null,
                "pull": null,
                "pulse": false,
                "rotation": null,
                "size": null,
                "spin": false,
                "symbol": false,
                "title": "",
                "transform": null,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": undefined,
              "componentStyle": ComponentStyle {
                "componentId": "sc-jzJRlG",
                "isStatic": false,
                "rules": Array [
                  "
  ",
                  "
  font-family: -apple-system, BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\",
    \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\",
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
",
                  ";
  display: block;
  color: ",
                  [Function],
                  ";
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: 40px;
  text-align: center;
  padding: 8px;
  text-decoration: none;
  background-image: linear-gradient(
    180deg,
    ",
                  [Function],
                  ",
    ",
                  [Function],
                  ",
    ",
                  [Function],
                  ",
    ",
                  [Function],
                  "
  );
  background-size: 400% 400%;
  background-position: 50% 0%;
  transition: 0.5s background-position;
  cursor: pointer;
  height: 100%;
  box-sizing: border-box;

  &:hover {
    background-position: 50% 35%;
  }
  .dropdown-arrow {
    margin-left: 4px;
  }
",
                ],
              },
              "displayName": "styled.div",
              "render": [Function],
              "styledComponentId": "sc-jzJRlG",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": [Function],
              "children": "About",
              "to": "/about",
            },
            "ref": null,
            "rendered": "About",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": undefined,
              "componentStyle": ComponentStyle {
                "componentId": "sc-jzJRlG",
                "isStatic": false,
                "rules": Array [
                  "
  ",
                  "
  font-family: -apple-system, BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\",
    \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\",
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
",
                  ";
  display: block;
  color: ",
                  [Function],
                  ";
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: 40px;
  text-align: center;
  padding: 8px;
  text-decoration: none;
  background-image: linear-gradient(
    180deg,
    ",
                  [Function],
                  ",
    ",
                  [Function],
                  ",
    ",
                  [Function],
                  ",
    ",
                  [Function],
                  "
  );
  background-size: 400% 400%;
  background-position: 50% 0%;
  transition: 0.5s background-position;
  cursor: pointer;
  height: 100%;
  box-sizing: border-box;

  &:hover {
    background-position: 50% 35%;
  }
  .dropdown-arrow {
    margin-left: 4px;
  }
",
                ],
              },
              "displayName": "styled.div",
              "render": [Function],
              "styledComponentId": "sc-jzJRlG",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": [Function],
              "children": "Create",
              "to": "/create",
            },
            "ref": null,
            "rendered": "Create",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": undefined,
              "componentStyle": ComponentStyle {
                "componentId": "sc-jzJRlG",
                "isStatic": false,
                "rules": Array [
                  "
  ",
                  "
  font-family: -apple-system, BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\",
    \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\",
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
",
                  ";
  display: block;
  color: ",
                  [Function],
                  ";
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: 40px;
  text-align: center;
  padding: 8px;
  text-decoration: none;
  background-image: linear-gradient(
    180deg,
    ",
                  [Function],
                  ",
    ",
                  [Function],
                  ",
    ",
                  [Function],
                  ",
    ",
                  [Function],
                  "
  );
  background-size: 400% 400%;
  background-position: 50% 0%;
  transition: 0.5s background-position;
  cursor: pointer;
  height: 100%;
  box-sizing: border-box;

  &:hover {
    background-position: 50% 35%;
  }
  .dropdown-arrow {
    margin-left: 4px;
  }
",
                ],
              },
              "displayName": "styled.div",
              "render": [Function],
              "styledComponentId": "sc-jzJRlG",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": [Function],
            },
            "ref": null,
            "rendered": [Function],
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": undefined,
      "componentStyle": ComponentStyle {
        "componentId": "sc-fjdhpX",
        "isStatic": false,
        "rules": Array [
          "
  background: ",
          [Function],
          ";
  height: 48px;
  width: 100%;
  display: flex;
  align-items: center;
  padding: 0 8px;
  box-shadow: 0 0 1px ",
          [Function],
          ";
  position: relative;
  box-sizing: border-box;

  .left,
  .right {
    display: flex;
    algin-items: center;
    flex-grow: 1;
  }
  .right {
    align-items: stretch;
    justify-content: flex-end;
    height: 100%;
  }
",
        ],
      },
      "displayName": "styled.div",
      "render": [Function],
      "styledComponentId": "sc-fjdhpX",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div
            className="left"
          >
            <ForwardRef>
              <ForwardRef
                as={[Function]}
                to="/"
              >
                KitePaint
              </ForwardRef>
            </ForwardRef>
          </div>,
          <div
            className="right"
          >
            <ForwardRef
              as={[Function]}
              to="/"
            >
              <FontAwesomeIcon
                border={false}
                className=""
                fixedWidth={false}
                flip={null}
                icon="home"
                inverse={false}
                listItem={false}
                mask={null}
                pull={null}
                pulse={false}
                rotation={null}
                size={null}
                spin={false}
                symbol={false}
                title=""
                transform={null}
              />
            </ForwardRef>
            <ForwardRef
              as={[Function]}
              to="/about"
            >
              About
            </ForwardRef>
            <ForwardRef
              as={[Function]}
              to="/create"
            >
              Create
            </ForwardRef>
            <Connect(UserContainer)>
              [Function]
            </Connect(UserContainer)>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ForwardRef>
              <ForwardRef
                as={[Function]}
                to="/"
              >
                KitePaint
              </ForwardRef>
            </ForwardRef>,
            "className": "left",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <ForwardRef
                as={[Function]}
                to="/"
              >
                KitePaint
              </ForwardRef>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": [Function],
                "children": "KitePaint",
                "to": "/",
              },
              "ref": null,
              "rendered": "KitePaint",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": undefined,
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bdVaJa",
                  "isStatic": false,
                  "rules": Array [
                    "
  color: ",
                    [Function],
                    ";
  text-decoration: none;
  margin: 0;
  cursor: pointer;

  &:hover {
    text-decoration: underline;
  }
",
                  ],
                },
                "displayName": "styled.a",
                "render": [Function],
                "styledComponentId": "sc-bdVaJa",
                "target": "a",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": undefined,
              "componentStyle": ComponentStyle {
                "componentId": "sc-htoDjs",
                "isStatic": true,
                "rules": Array [
                  "
  font-size: 1.5em;
",
                ],
              },
              "displayName": "Styled(H2)",
              "render": [Function],
              "styledComponentId": "sc-htoDjs",
              "target": [Function],
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
              Symbol(Symbol.hasInstance): [Function],
            },
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <ForwardRef
                as={[Function]}
                to="/"
              >
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={false}
                  flip={null}
                  icon="home"
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  symbol={false}
                  title=""
                  transform={null}
                />
              </ForwardRef>,
              <ForwardRef
                as={[Function]}
                to="/about"
              >
                About
              </ForwardRef>,
              <ForwardRef
                as={[Function]}
                to="/create"
              >
                Create
              </ForwardRef>,
              <Connect(UserContainer)>
                [Function]
              </Connect(UserContainer)>,
            ],
            "className": "right",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": [Function],
                "children": <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={false}
                  flip={null}
                  icon="home"
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  symbol={false}
                  title=""
                  transform={null}
                />,
                "to": "/",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "border": false,
                  "className": "",
                  "fixedWidth": false,
                  "flip": null,
                  "icon": "home",
                  "inverse": false,
                  "listItem": false,
                  "mask": null,
                  "pull": null,
                  "pulse": false,
                  "rotation": null,
                  "size": null,
                  "spin": false,
                  "symbol": false,
                  "title": "",
                  "transform": null,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": undefined,
                "componentStyle": ComponentStyle {
                  "componentId": "sc-jzJRlG",
                  "isStatic": false,
                  "rules": Array [
                    "
  ",
                    "
  font-family: -apple-system, BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\",
    \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\",
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
",
                    ";
  display: block;
  color: ",
                    [Function],
                    ";
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: 40px;
  text-align: center;
  padding: 8px;
  text-decoration: none;
  background-image: linear-gradient(
    180deg,
    ",
                    [Function],
                    ",
    ",
                    [Function],
                    ",
    ",
                    [Function],
                    ",
    ",
                    [Function],
                    "
  );
  background-size: 400% 400%;
  background-position: 50% 0%;
  transition: 0.5s background-position;
  cursor: pointer;
  height: 100%;
  box-sizing: border-box;

  &:hover {
    background-position: 50% 35%;
  }
  .dropdown-arrow {
    margin-left: 4px;
  }
",
                  ],
                },
                "displayName": "styled.div",
                "render": [Function],
                "styledComponentId": "sc-jzJRlG",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": [Function],
                "children": "About",
                "to": "/about",
              },
              "ref": null,
              "rendered": "About",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": undefined,
                "componentStyle": ComponentStyle {
                  "componentId": "sc-jzJRlG",
                  "isStatic": false,
                  "rules": Array [
                    "
  ",
                    "
  font-family: -apple-system, BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\",
    \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\",
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
",
                    ";
  display: block;
  color: ",
                    [Function],
                    ";
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: 40px;
  text-align: center;
  padding: 8px;
  text-decoration: none;
  background-image: linear-gradient(
    180deg,
    ",
                    [Function],
                    ",
    ",
                    [Function],
                    ",
    ",
                    [Function],
                    ",
    ",
                    [Function],
                    "
  );
  background-size: 400% 400%;
  background-position: 50% 0%;
  transition: 0.5s background-position;
  cursor: pointer;
  height: 100%;
  box-sizing: border-box;

  &:hover {
    background-position: 50% 35%;
  }
  .dropdown-arrow {
    margin-left: 4px;
  }
",
                  ],
                },
                "displayName": "styled.div",
                "render": [Function],
                "styledComponentId": "sc-jzJRlG",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": [Function],
                "children": "Create",
                "to": "/create",
              },
              "ref": null,
              "rendered": "Create",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": undefined,
                "componentStyle": ComponentStyle {
                  "componentId": "sc-jzJRlG",
                  "isStatic": false,
                  "rules": Array [
                    "
  ",
                    "
  font-family: -apple-system, BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\",
    \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\",
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
",
                    ";
  display: block;
  color: ",
                    [Function],
                    ";
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: 40px;
  text-align: center;
  padding: 8px;
  text-decoration: none;
  background-image: linear-gradient(
    180deg,
    ",
                    [Function],
                    ",
    ",
                    [Function],
                    ",
    ",
                    [Function],
                    ",
    ",
                    [Function],
                    "
  );
  background-size: 400% 400%;
  background-position: 50% 0%;
  transition: 0.5s background-position;
  cursor: pointer;
  height: 100%;
  box-sizing: border-box;

  &:hover {
    background-position: 50% 35%;
  }
  .dropdown-arrow {
    margin-left: 4px;
  }
",
                  ],
                },
                "displayName": "styled.div",
                "render": [Function],
                "styledComponentId": "sc-jzJRlG",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": [Function],
              },
              "ref": null,
              "rendered": [Function],
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": undefined,
        "componentStyle": ComponentStyle {
          "componentId": "sc-fjdhpX",
          "isStatic": false,
          "rules": Array [
            "
  background: ",
            [Function],
            ";
  height: 48px;
  width: 100%;
  display: flex;
  align-items: center;
  padding: 0 8px;
  box-shadow: 0 0 1px ",
            [Function],
            ";
  position: relative;
  box-sizing: border-box;

  .left,
  .right {
    display: flex;
    algin-items: center;
    flex-grow: 1;
  }
  .right {
    align-items: stretch;
    justify-content: flex-end;
    height: 100%;
  }
",
          ],
        },
        "displayName": "styled.div",
        "render": [Function],
        "styledComponentId": "sc-fjdhpX",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
