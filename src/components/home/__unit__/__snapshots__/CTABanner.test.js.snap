// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CTABanner renders 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CTABanner
    onClick={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <div
        className="cta-wrapper"
      >
        <ForwardRef
          isLight={true}
        >
          Get started new by creating a new kite design!
        </ForwardRef>
        <Button
          as={[Function]}
          isBlock={true}
          isPrimary={true}
          to="/create"
        >
          Get Started
        </Button>
      </div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <ForwardRef
            isLight={true}
          >
            Get started new by creating a new kite design!
          </ForwardRef>,
          <Button
            as={[Function]}
            isBlock={true}
            isPrimary={true}
            to="/create"
          >
            Get Started
          </Button>,
        ],
        "className": "cta-wrapper",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Get started new by creating a new kite design!",
            "isLight": true,
          },
          "ref": null,
          "rendered": "Get started new by creating a new kite design!",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": undefined,
            "componentStyle": ComponentStyle {
              "componentId": "sc-dnqmqq",
              "isStatic": true,
              "rules": Array [
                "
  font-size: 1.17em;
",
              ],
            },
            "displayName": "Styled(H3)",
            "render": [Function],
            "styledComponentId": "sc-dnqmqq",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": [Function],
            "children": "Get Started",
            "isBlock": true,
            "isPrimary": true,
            "to": "/create",
          },
          "ref": null,
          "rendered": "Get Started",
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": undefined,
      "componentStyle": ComponentStyle {
        "componentId": "sc-fjdhpX",
        "isStatic": true,
        "rules": Array [
          "
  height: 408px;
  width: 100&=%;
  background: url(",
          "bg-rev.jpg",
          ") no-repeat center;
  background-size: cover;
  display: flex;
  align-items: center;
  justify-content: center;

  .cta-wrapper {
    background: rgba(0, 0, 0, 0.5);
    width: 400px;
    text-align: center;
    padding: 16px;
    border-radius: 8px;
  }
",
        ],
      },
      "displayName": "styled.div",
      "render": [Function],
      "styledComponentId": "sc-fjdhpX",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <div
          className="cta-wrapper"
        >
          <ForwardRef
            isLight={true}
          >
            Get started new by creating a new kite design!
          </ForwardRef>
          <Button
            as={[Function]}
            isBlock={true}
            isPrimary={true}
            to="/create"
          >
            Get Started
          </Button>
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <ForwardRef
              isLight={true}
            >
              Get started new by creating a new kite design!
            </ForwardRef>,
            <Button
              as={[Function]}
              isBlock={true}
              isPrimary={true}
              to="/create"
            >
              Get Started
            </Button>,
          ],
          "className": "cta-wrapper",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Get started new by creating a new kite design!",
              "isLight": true,
            },
            "ref": null,
            "rendered": "Get started new by creating a new kite design!",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": undefined,
              "componentStyle": ComponentStyle {
                "componentId": "sc-dnqmqq",
                "isStatic": true,
                "rules": Array [
                  "
  font-size: 1.17em;
",
                ],
              },
              "displayName": "Styled(H3)",
              "render": [Function],
              "styledComponentId": "sc-dnqmqq",
              "target": [Function],
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
              Symbol(Symbol.hasInstance): [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": [Function],
              "children": "Get Started",
              "isBlock": true,
              "isPrimary": true,
              "to": "/create",
            },
            "ref": null,
            "rendered": "Get Started",
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": undefined,
        "componentStyle": ComponentStyle {
          "componentId": "sc-fjdhpX",
          "isStatic": true,
          "rules": Array [
            "
  height: 408px;
  width: 100&=%;
  background: url(",
            "bg-rev.jpg",
            ") no-repeat center;
  background-size: cover;
  display: flex;
  align-items: center;
  justify-content: center;

  .cta-wrapper {
    background: rgba(0, 0, 0, 0.5);
    width: 400px;
    text-align: center;
    padding: 16px;
    border-radius: 8px;
  }
",
          ],
        },
        "displayName": "styled.div",
        "render": [Function],
        "styledComponentId": "sc-fjdhpX",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
