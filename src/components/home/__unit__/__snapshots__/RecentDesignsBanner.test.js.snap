// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RecentDesignsBanner renders 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RecentDesignsBanner
    designs={
      Array [
        Object {
          "created": "10/01/01",
          "id": "123",
          "name": "abc",
          "variations": Array [
            Object {
              "name": "v1",
              "primary": true,
              "svg": "<div class=\\"totally-svg\\">Pretty Design</div>",
            },
          ],
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef>
          Recent Designs
        </ForwardRef>,
        <div
          className="designs"
        >
          <Link
            className="design-wrapper"
            replace={false}
            to="/view/123"
          >
            <div
              className="design-preview"
              dangerouslySetInnerHTML={
                Object {
                  "__html": "<div class=\\"totally-svg\\">Pretty Design</div>",
                }
              }
            />
            <P
              className="design-name"
              isLight={true}
            >
              abc
            </P>
          </Link>
        </div>,
        <div
          className="see-all-wrapper"
        >
          <Button
            as={[Function]}
            isBlock={true}
            to="/designs"
          >
            See All Designs
          </Button>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "Recent Designs",
        },
        "ref": null,
        "rendered": "Recent Designs",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": undefined,
          "componentStyle": ComponentStyle {
            "componentId": "sc-htoDjs",
            "isStatic": true,
            "rules": Array [
              "
  font-size: 1.5em;
",
            ],
          },
          "displayName": "Styled(H2)",
          "render": [Function],
          "styledComponentId": "sc-htoDjs",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Link
              className="design-wrapper"
              replace={false}
              to="/view/123"
            >
              <div
                className="design-preview"
                dangerouslySetInnerHTML={
                  Object {
                    "__html": "<div class=\\"totally-svg\\">Pretty Design</div>",
                  }
                }
              />
              <P
                className="design-name"
                isLight={true}
              >
                abc
              </P>
            </Link>,
          ],
          "className": "designs",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "123",
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <div
                  className="design-preview"
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<div class=\\"totally-svg\\">Pretty Design</div>",
                    }
                  }
                />,
                <P
                  className="design-name"
                  isLight={true}
                >
                  abc
                </P>,
              ],
              "className": "design-wrapper",
              "replace": false,
              "to": "/view/123",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "design-preview",
                  "dangerouslySetInnerHTML": Object {
                    "__html": "<div class=\\"totally-svg\\">Pretty Design</div>",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "abc",
                  "className": "design-name",
                  "isLight": true,
                },
                "ref": null,
                "rendered": "abc",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Button
            as={[Function]}
            isBlock={true}
            to="/designs"
          >
            See All Designs
          </Button>,
          "className": "see-all-wrapper",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": [Function],
            "children": "See All Designs",
            "isBlock": true,
            "to": "/designs",
          },
          "ref": null,
          "rendered": "See All Designs",
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": undefined,
      "componentStyle": ComponentStyle {
        "componentId": "sc-fjdhpX",
        "isStatic": true,
        "rules": Array [
          "
  padding: 16px;
  > .designs {
    display: flex;
    justify-content: space-evenly;
    flex-wrap: wrap;
  }
  .design-preview {
    width:200px
    height: 200px;
    flex-shrink: 0;
    padding: 16px 0;

    > svg {
      position: relative;
      top: 50%;
      transform: translateY(-50%) rotate(45deg);
    }
  }
  > .see-all-wrapper {
    max-width: 400px;
    margin: 0 auto;
  }
  .design-name {
    position: absolute;
    top: 10%;
    left: 0;
    padding: 4px;
    background: rgba(0,0,0,.8);
    transform: translateX(-110%);
    transition: .5s transform;
  }
  .design-wrapper {
    position: relative;
    overflow: hidden;
    cursor: pointer;

    &:hover {
      .design-name {
        transform: translateX(0);
      }
    }
  }
",
        ],
      },
      "displayName": "styled.div",
      "render": [Function],
      "styledComponentId": "sc-fjdhpX",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef>
            Recent Designs
          </ForwardRef>,
          <div
            className="designs"
          >
            <Link
              className="design-wrapper"
              replace={false}
              to="/view/123"
            >
              <div
                className="design-preview"
                dangerouslySetInnerHTML={
                  Object {
                    "__html": "<div class=\\"totally-svg\\">Pretty Design</div>",
                  }
                }
              />
              <P
                className="design-name"
                isLight={true}
              >
                abc
              </P>
            </Link>
          </div>,
          <div
            className="see-all-wrapper"
          >
            <Button
              as={[Function]}
              isBlock={true}
              to="/designs"
            >
              See All Designs
            </Button>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Recent Designs",
          },
          "ref": null,
          "rendered": "Recent Designs",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": undefined,
            "componentStyle": ComponentStyle {
              "componentId": "sc-htoDjs",
              "isStatic": true,
              "rules": Array [
                "
  font-size: 1.5em;
",
              ],
            },
            "displayName": "Styled(H2)",
            "render": [Function],
            "styledComponentId": "sc-htoDjs",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Link
                className="design-wrapper"
                replace={false}
                to="/view/123"
              >
                <div
                  className="design-preview"
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<div class=\\"totally-svg\\">Pretty Design</div>",
                    }
                  }
                />
                <P
                  className="design-name"
                  isLight={true}
                >
                  abc
                </P>
              </Link>,
            ],
            "className": "designs",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "123",
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <div
                    className="design-preview"
                    dangerouslySetInnerHTML={
                      Object {
                        "__html": "<div class=\\"totally-svg\\">Pretty Design</div>",
                      }
                    }
                  />,
                  <P
                    className="design-name"
                    isLight={true}
                  >
                    abc
                  </P>,
                ],
                "className": "design-wrapper",
                "replace": false,
                "to": "/view/123",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "design-preview",
                    "dangerouslySetInnerHTML": Object {
                      "__html": "<div class=\\"totally-svg\\">Pretty Design</div>",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "abc",
                    "className": "design-name",
                    "isLight": true,
                  },
                  "ref": null,
                  "rendered": "abc",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Button
              as={[Function]}
              isBlock={true}
              to="/designs"
            >
              See All Designs
            </Button>,
            "className": "see-all-wrapper",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": [Function],
              "children": "See All Designs",
              "isBlock": true,
              "to": "/designs",
            },
            "ref": null,
            "rendered": "See All Designs",
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": undefined,
        "componentStyle": ComponentStyle {
          "componentId": "sc-fjdhpX",
          "isStatic": true,
          "rules": Array [
            "
  padding: 16px;
  > .designs {
    display: flex;
    justify-content: space-evenly;
    flex-wrap: wrap;
  }
  .design-preview {
    width:200px
    height: 200px;
    flex-shrink: 0;
    padding: 16px 0;

    > svg {
      position: relative;
      top: 50%;
      transform: translateY(-50%) rotate(45deg);
    }
  }
  > .see-all-wrapper {
    max-width: 400px;
    margin: 0 auto;
  }
  .design-name {
    position: absolute;
    top: 10%;
    left: 0;
    padding: 4px;
    background: rgba(0,0,0,.8);
    transform: translateX(-110%);
    transition: .5s transform;
  }
  .design-wrapper {
    position: relative;
    overflow: hidden;
    cursor: pointer;

    &:hover {
      .design-name {
        transform: translateX(0);
      }
    }
  }
",
          ],
        },
        "displayName": "styled.div",
        "render": [Function],
        "styledComponentId": "sc-fjdhpX",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
