// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Provider
        store={
          Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
        }
      >
        <ThemeProvider
          theme={
            Object {
              "colors": Object {
                "aqua": "#7FDBFF",
                "black": "#111111",
                "blue": "#0074D9",
                "blueDarker": "#005daa",
                "fuchsia": "#F012BE",
                "gray": "#AAAAAA",
                "green": "#2ECC40",
                "lime": "#01FF70",
                "maroon": "#85144B",
                "navy": "#001F3F",
                "olive": "#3D9970",
                "orange": "#FF851B",
                "purple": "#B10DC9",
                "red": "#FF4136",
                "silver": "#DDDDDD",
                "teal": "#39CCCC",
                "white": "#FFFFFF",
                "yellow": "#FFDC00",
              },
            }
          }
        >
          <Connect(AppContainer)>
            <Header />
            <Switch>
              <Route
                component={[Function]}
                exact={true}
                path="/"
              />
              <Route
                component={[Function]}
              />
            </Switch>
          </Connect(AppContainer)>
        </ThemeProvider>
      </Provider>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <ThemeProvider
          theme={
            Object {
              "colors": Object {
                "aqua": "#7FDBFF",
                "black": "#111111",
                "blue": "#0074D9",
                "blueDarker": "#005daa",
                "fuchsia": "#F012BE",
                "gray": "#AAAAAA",
                "green": "#2ECC40",
                "lime": "#01FF70",
                "maroon": "#85144B",
                "navy": "#001F3F",
                "olive": "#3D9970",
                "orange": "#FF851B",
                "purple": "#B10DC9",
                "red": "#FF4136",
                "silver": "#DDDDDD",
                "teal": "#39CCCC",
                "white": "#FFFFFF",
                "yellow": "#FFDC00",
              },
            }
          }
        >
          <Connect(AppContainer)>
            <Header />
            <Switch>
              <Route
                component={[Function]}
                exact={true}
                path="/"
              />
              <Route
                component={[Function]}
              />
            </Switch>
          </Connect(AppContainer)>
        </ThemeProvider>,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Connect(AppContainer)>
            <Header />
            <Switch>
              <Route
                component={[Function]}
                exact={true}
                path="/"
              />
              <Route
                component={[Function]}
              />
            </Switch>
          </Connect(AppContainer)>,
          "theme": Object {
            "colors": Object {
              "aqua": "#7FDBFF",
              "black": "#111111",
              "blue": "#0074D9",
              "blueDarker": "#005daa",
              "fuchsia": "#F012BE",
              "gray": "#AAAAAA",
              "green": "#2ECC40",
              "lime": "#01FF70",
              "maroon": "#85144B",
              "navy": "#001F3F",
              "olive": "#3D9970",
              "orange": "#FF851B",
              "purple": "#B10DC9",
              "red": "#FF4136",
              "silver": "#DDDDDD",
              "teal": "#39CCCC",
              "white": "#FFFFFF",
              "yellow": "#FFDC00",
            },
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Header />,
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                />
              </Switch>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />,
                  <Route
                    component={[Function]}
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <ThemeProvider
            theme={
              Object {
                "colors": Object {
                  "aqua": "#7FDBFF",
                  "black": "#111111",
                  "blue": "#0074D9",
                  "blueDarker": "#005daa",
                  "fuchsia": "#F012BE",
                  "gray": "#AAAAAA",
                  "green": "#2ECC40",
                  "lime": "#01FF70",
                  "maroon": "#85144B",
                  "navy": "#001F3F",
                  "olive": "#3D9970",
                  "orange": "#FF851B",
                  "purple": "#B10DC9",
                  "red": "#FF4136",
                  "silver": "#DDDDDD",
                  "teal": "#39CCCC",
                  "white": "#FFFFFF",
                  "yellow": "#FFDC00",
                },
              }
            }
          >
            <Connect(AppContainer)>
              <Header />
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                />
              </Switch>
            </Connect(AppContainer)>
          </ThemeProvider>
        </Provider>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <ThemeProvider
            theme={
              Object {
                "colors": Object {
                  "aqua": "#7FDBFF",
                  "black": "#111111",
                  "blue": "#0074D9",
                  "blueDarker": "#005daa",
                  "fuchsia": "#F012BE",
                  "gray": "#AAAAAA",
                  "green": "#2ECC40",
                  "lime": "#01FF70",
                  "maroon": "#85144B",
                  "navy": "#001F3F",
                  "olive": "#3D9970",
                  "orange": "#FF851B",
                  "purple": "#B10DC9",
                  "red": "#FF4136",
                  "silver": "#DDDDDD",
                  "teal": "#39CCCC",
                  "white": "#FFFFFF",
                  "yellow": "#FFDC00",
                },
              }
            }
          >
            <Connect(AppContainer)>
              <Header />
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                />
              </Switch>
            </Connect(AppContainer)>
          </ThemeProvider>,
          "store": Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Connect(AppContainer)>
              <Header />
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                />
              </Switch>
            </Connect(AppContainer)>,
            "theme": Object {
              "colors": Object {
                "aqua": "#7FDBFF",
                "black": "#111111",
                "blue": "#0074D9",
                "blueDarker": "#005daa",
                "fuchsia": "#F012BE",
                "gray": "#AAAAAA",
                "green": "#2ECC40",
                "lime": "#01FF70",
                "maroon": "#85144B",
                "navy": "#001F3F",
                "olive": "#3D9970",
                "orange": "#FF851B",
                "purple": "#B10DC9",
                "red": "#FF4136",
                "silver": "#DDDDDD",
                "teal": "#39CCCC",
                "white": "#FFFFFF",
                "yellow": "#FFDC00",
              },
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Header />,
                <Switch>
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Route
                    component={[Function]}
                  />
                </Switch>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Route
                      component={[Function]}
                      exact={true}
                      path="/"
                    />,
                    <Route
                      component={[Function]}
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "exact": true,
                      "path": "/",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
