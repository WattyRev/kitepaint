// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AccountForm renders 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AccountForm
    id="abc"
    isDisabled={false}
    isRecognizedUser={false}
    onLogIn={[MockFunction]}
    onRegister={[MockFunction]}
    onResetPassword={[MockFunction]}
    onToggleRecognition={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <RegisterForm
        email=""
        id="abc"
        isDisabled={false}
        onEmailChange={[Function]}
        onLogIn={[Function]}
        onPasswordChange={[Function]}
        onPasswordConfirmationChange={[Function]}
        onSubmit={[Function]}
        onUsernameChange={[Function]}
        password=""
        passwordConfirmation=""
        showSuccessMessage={false}
        username=""
      />,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "email": "",
        "id": "abc",
        "isDisabled": false,
        "onEmailChange": [Function],
        "onLogIn": [Function],
        "onPasswordChange": [Function],
        "onPasswordConfirmationChange": [Function],
        "onSubmit": [Function],
        "onUsernameChange": [Function],
        "password": "",
        "passwordConfirmation": "",
        "showSuccessMessage": false,
        "username": "",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": undefined,
      "componentStyle": ComponentStyle {
        "componentId": "sc-htoDjs",
        "isStatic": false,
        "rules": Array [
          "
  width: 100%;
  max-width: 300px;
  background: ",
          [Function],
          ";
  border-radius: 8px;
  padding: 16px;
",
        ],
      },
      "displayName": "styled.div",
      "render": [Function],
      "styledComponentId": "sc-htoDjs",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <RegisterForm
          email=""
          id="abc"
          isDisabled={false}
          onEmailChange={[Function]}
          onLogIn={[Function]}
          onPasswordChange={[Function]}
          onPasswordConfirmationChange={[Function]}
          onSubmit={[Function]}
          onUsernameChange={[Function]}
          password=""
          passwordConfirmation=""
          showSuccessMessage={false}
          username=""
        />,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "email": "",
          "id": "abc",
          "isDisabled": false,
          "onEmailChange": [Function],
          "onLogIn": [Function],
          "onPasswordChange": [Function],
          "onPasswordConfirmationChange": [Function],
          "onSubmit": [Function],
          "onUsernameChange": [Function],
          "password": "",
          "passwordConfirmation": "",
          "showSuccessMessage": false,
          "username": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": undefined,
        "componentStyle": ComponentStyle {
          "componentId": "sc-htoDjs",
          "isStatic": false,
          "rules": Array [
            "
  width: 100%;
  max-width: 300px;
  background: ",
            [Function],
            ";
  border-radius: 8px;
  padding: 16px;
",
          ],
        },
        "displayName": "styled.div",
        "render": [Function],
        "styledComponentId": "sc-htoDjs",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
